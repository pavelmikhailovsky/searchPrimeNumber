version: '3.4'
services:
  main:
    container_name: searchjustnumber
    build:
      context: .
      target: development
    ports:
      - 8000:8000
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - DATABASE_URL=jdbc:postgresql://postgresql:5432/findpk
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
    depends_on:
      - postgresqlserver
    volumes:
      - ./:/app
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000"

  postgresqlserver:
    container_name: postgresql
    user: postgres
    image: postgres:13.5-alpine
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=findpk
    volumes:
      - prime_number_postgres_data:/var/lib/postgresql
      - prime_number_postgres_config:/etc/postgresql/13/main/conf.d
      - ./sql:/docker-entrypoint-initdb.d/
volumes:
  prime_number_postgres_data:
  prime_number_postgres_config: